{"uid":"b4a00179af37c0b1","name":"Validate Council Output [BromleyBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7f3dc7acf0fc90eded39e25c4ed3bb60","time":{"start":1677894269779,"stop":1677894279086,"duration":9307},"status":"failed","statusMessage":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","statusTrace":"fixturefunc = <function scrape_step at 0x7f880600f1f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f87f8af9430>, 'council': 'BromleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.9/lib/python3.9/site-packages/_pytest/fixtures.py:908: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:59: in scrape_step\n    raise(err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:55: in scrape_step\n    context.parse_result = collect_data.main(args)\nuk_bin_collection/uk_bin_collection/collect_data.py:67: in main\n    return client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:23: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BromleyBoroughCouncil.CouncilClass object at 0x7f88061aadf0>\naddress_url = 'https://recyclingservices.bromley.gov.uk/property/100020380703'\nkwargs = {'paon': None, 'postcode': None, 'skip_get_url': None, 'uprn': '100020380703'}\nthis_postcode = None, this_paon = None, this_uprn = '100020380703'\nskip_get_url = None, page = <Response [200]>\n\n    def template_method(self, address_url: str, **kwargs) -> None:  # pragma: no cover\n        \"\"\"The main template method that is constructed\n    \n        Keyword arguments:\n        address_url -- the url to get the data from\n        \"\"\"\n        this_postcode = kwargs.get(\"postcode\", None)\n        this_paon = kwargs.get(\"paon\", None)\n        this_uprn = kwargs.get(\"uprn\", None)\n        skip_get_url = kwargs.get(\"skip_get_url\", None)\n        if (\n            not skip_get_url or skip_get_url is False\n        ):  # we will not use the generic way to get data - needs a get data in the council class itself\n            page = self.get_data(address_url)\n>           bin_data_dict = self.parse_data(\n                page, postcode=this_postcode, paon=this_paon, uprn=this_uprn\n            )\nE           TypeError: parse_data() got an unexpected keyword argument 'postcode'\n\nuk_bin_collection/uk_bin_collection/get_bin_data.py:57: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","statusTrace":"fixturefunc = <function scrape_step at 0x7f880600f1f0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BromleyBoroughCouncil]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f87f8af9430>, 'council': 'BromleyBoroughCouncil'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.9/lib/python3.9/site-packages/_pytest/fixtures.py:908: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:59: in scrape_step\n    raise(err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:55: in scrape_step\n    context.parse_result = collect_data.main(args)\nuk_bin_collection/uk_bin_collection/collect_data.py:67: in main\n    return client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:23: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BromleyBoroughCouncil.CouncilClass object at 0x7f88061aadf0>\naddress_url = 'https://recyclingservices.bromley.gov.uk/property/100020380703'\nkwargs = {'paon': None, 'postcode': None, 'skip_get_url': None, 'uprn': '100020380703'}\nthis_postcode = None, this_paon = None, this_uprn = '100020380703'\nskip_get_url = None, page = <Response [200]>\n\n    def template_method(self, address_url: str, **kwargs) -> None:  # pragma: no cover\n        \"\"\"The main template method that is constructed\n    \n        Keyword arguments:\n        address_url -- the url to get the data from\n        \"\"\"\n        this_postcode = kwargs.get(\"postcode\", None)\n        this_paon = kwargs.get(\"paon\", None)\n        this_uprn = kwargs.get(\"uprn\", None)\n        skip_get_url = kwargs.get(\"skip_get_url\", None)\n        if (\n            not skip_get_url or skip_get_url is False\n        ):  # we will not use the generic way to get data - needs a get data in the council class itself\n            page = self.get_data(address_url)\n>           bin_data_dict = self.parse_data(\n                page, postcode=this_postcode, paon=this_paon, uprn=this_uprn\n            )\nE           TypeError: parse_data() got an unexpected keyword argument 'postcode'\n\nuk_bin_collection/uk_bin_collection/get_bin_data.py:57: TypeError","steps":[{"name":"Given the council: BromleyBoroughCouncil","time":{"start":1677894269779,"stop":1677894269780,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from BromleyBoroughCouncil","time":{"start":1677894269780,"stop":1677894279086,"duration":9306},"status":"failed","statusMessage":"parse_data() got an unexpected keyword argument 'postcode'","statusTrace":"TypeError: parse_data() got an unexpected keyword argument 'postcode'\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az461-708"},{"name":"thread","value":"2594-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":15},"items":[{"uid":"b86eb9c08c2f3604","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/585//#testresult/b86eb9c08c2f3604","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677866994370,"stop":1677867002285,"duration":7915}},{"uid":"cad9abba445b86bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/583//#testresult/cad9abba445b86bc","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677814344473,"stop":1677814355857,"duration":11384}},{"uid":"9b4de894e417773b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/582//#testresult/9b4de894e417773b","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677787771866,"stop":1677787780735,"duration":8869}},{"uid":"387d40dec5f35344","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/579//#testresult/387d40dec5f35344","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677721982742,"stop":1677721991051,"duration":8309}},{"uid":"fd417526602a49ff","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/578//#testresult/fd417526602a49ff","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677707390934,"stop":1677707399373,"duration":8439}},{"uid":"b3da00f3161369df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/575//#testresult/b3da00f3161369df","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677700512687,"stop":1677700513418,"duration":731}},{"uid":"8e94f70707595d0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/573//#testresult/8e94f70707595d0c","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677646247123,"stop":1677646248396,"duration":1273}},{"uid":"dd80d2e8175fd565","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/572//#testresult/dd80d2e8175fd565","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677635778430,"stop":1677635779432,"duration":1002}},{"uid":"57fa8da6c5d84438","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/568//#testresult/57fa8da6c5d84438","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677580136723,"stop":1677580137852,"duration":1129}},{"uid":"66a2940d48d2f7f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/566//#testresult/66a2940d48d2f7f5","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677548819568,"stop":1677548820936,"duration":1368}},{"uid":"852c178be2706eaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/564//#testresult/852c178be2706eaf","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677485666724,"stop":1677485667913,"duration":1189}},{"uid":"7f6a6122a3588b6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/562//#testresult/7f6a6122a3588b6c","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677462412969,"stop":1677462413834,"duration":865}},{"uid":"4cb6147812813f77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/561//#testresult/4cb6147812813f77","status":"failed","statusDetails":"TypeError: parse_data() got an unexpected keyword argument 'postcode'","time":{"start":1677458446592,"stop":1677458447254,"duration":662}},{"uid":"41dd97c7bc60c932","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/559//#testresult/41dd97c7bc60c932","status":"failed","statusDetails":"AttributeError: 'Context' object has no attribute 'parse_result'","time":{"start":1677455874006,"stop":1677455875064,"duration":1058}}]},"tags":[]},"source":"b4a00179af37c0b1.json","parameterValues":[]}