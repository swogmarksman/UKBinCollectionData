{"uid":"530102bb6a3ece80","name":"Validate Council Output [EastDevonDC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"33b002c0b125c12033855f36f4074886","time":{"start":1677867020975,"stop":1677867022043,"duration":1068},"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2040c89550>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastDevonDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2033563ca0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.9/lib/python3.9/site-packages/_pytest/fixtures.py:908: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:84: in validate_output_step\n    raise(err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2033563ca0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False is True","statusTrace":"fixturefunc = <function validate_output_step at 0x7f2040c89550>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastDevonDC]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f2033563ca0>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.9/lib/python3.9/site-packages/_pytest/fixtures.py:908: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:84: in validate_output_step\n    raise(err)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = <test_validate_council.context.<locals>.Context object at 0x7f2033563ca0>\n\n    @then(\"the output should validate against the schema\")\n    def validate_output_step(context):\n        try:\n            council_schema = file_handler.load_schema_file(f\"{context.council}.schema\")\n            schema_result = file_handler.validate_json_schema(\n                context.parse_result, council_schema\n            )\n>           assert schema_result is True\nE           assert False is True\n\nuk_bin_collection/tests/step_defs/test_validate_council.py:80: AssertionError","steps":[{"name":"Given the council: EastDevonDC","time":{"start":1677867020976,"stop":1677867020976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from EastDevonDC","time":{"start":1677867020977,"stop":1677867022034,"duration":1057},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then the result is valid json","time":{"start":1677867022034,"stop":1677867022034,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"And the output should validate against the schema","time":{"start":1677867022035,"stop":1677867022043,"duration":8},"status":"failed","statusMessage":"assert False is True","statusTrace":"AssertionError: assert False is True\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az257-985"},{"name":"thread","value":"2648-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":14},"items":[{"uid":"17eb9b46aa32cdab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/583//#testresult/17eb9b46aa32cdab","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1677814277790,"stop":1677814278397,"duration":607}},{"uid":"d2bc6cf222dba565","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/582//#testresult/d2bc6cf222dba565","status":"failed","statusDetails":"AssertionError: assert False is True","time":{"start":1677787795665,"stop":1677787796614,"duration":949}},{"uid":"3d1c40088d609d46","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/579//#testresult/3d1c40088d609d46","status":"passed","time":{"start":1677721908396,"stop":1677721909495,"duration":1099}},{"uid":"e574c5b2934bc560","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/578//#testresult/e574c5b2934bc560","status":"passed","time":{"start":1677707413636,"stop":1677707414421,"duration":785}},{"uid":"15ba9da168dfec6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/575//#testresult/15ba9da168dfec6a","status":"passed","time":{"start":1677700521409,"stop":1677700522174,"duration":765}},{"uid":"666f8cc0c231a8de","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/573//#testresult/666f8cc0c231a8de","status":"passed","time":{"start":1677646262580,"stop":1677646263377,"duration":797}},{"uid":"928074603bc2734d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/572//#testresult/928074603bc2734d","status":"passed","time":{"start":1677635704754,"stop":1677635705613,"duration":859}},{"uid":"c2e47b418345ed8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/568//#testresult/c2e47b418345ed8","status":"passed","time":{"start":1677580261860,"stop":1677580262875,"duration":1015}},{"uid":"efac6a8c444d55dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/566//#testresult/efac6a8c444d55dc","status":"passed","time":{"start":1677548758538,"stop":1677548759642,"duration":1104}},{"uid":"d3c6deecf0e47de1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/564//#testresult/d3c6deecf0e47de1","status":"passed","time":{"start":1677485689356,"stop":1677485690411,"duration":1055}},{"uid":"9ecea73ce7cdf083","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/562//#testresult/9ecea73ce7cdf083","status":"passed","time":{"start":1677462363790,"stop":1677462364404,"duration":614}},{"uid":"f5989ba088d7e33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/561//#testresult/f5989ba088d7e33","status":"passed","time":{"start":1677458376589,"stop":1677458377335,"duration":746}},{"uid":"6a4deb6908bc6d4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.9/559//#testresult/6a4deb6908bc6d4b","status":"passed","time":{"start":1677455896354,"stop":1677455896953,"duration":599}}]},"tags":[]},"source":"530102bb6a3ece80.json","parameterValues":[]}